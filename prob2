/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2)
{
    ListNode* result= nullptr;
    ListNode* head = nullptr; 
    int digit;
    int carry = 0;

    while (l1 && l2)
    {
        digit = l1->val + l2->val + carry;
        if (digit >= 10)
        {
            carry = 1;
            digit = digit - 10;
        }
        else carry = 0;

        if (result == nullptr)
        {
            result = new ListNode(digit);
            head = result;
        }
        else
        {
            result->next = new ListNode(digit);
            result = result->next;
        }
        l1 = l1->next;
        l2 = l2->next;
    }

   while (l1 != nullptr)
    {
        digit = l1->val + carry;
        if (digit >= 10)
        {
            digit = digit - 10;
            carry = 1;
        }
        else carry = 0;
        result->next = new ListNode(digit);
        result = result->next;
        l1 = l1->next;
    }

    while (l2 != nullptr)
    {
        digit = l2->val + carry;
        if (digit >= 10)
        {
            digit = digit - 10;
            carry = 1;
        }
        else carry = 0;
        result->next = new ListNode(digit);
        result = result->next;
        l2 = l2->next;
    }
    if (carry != 0)
    {
        result->next = new ListNode(carry);
    }
    return head;
}};
